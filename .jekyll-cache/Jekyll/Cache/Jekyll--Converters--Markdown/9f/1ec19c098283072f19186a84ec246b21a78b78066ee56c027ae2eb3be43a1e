I"1<h2 id="what-is-the-levenshtein-distance">What is the Levenshtein distance?</h2>

<p>The Levenshtein Algorithm compare A and B string.<br />
Returns 0(zero) If both are equal and Integer value if both are different.<br />
The Integer value is the number of times you need to modify the two values to be the equal.<br />
Of course, the smaller the value is similar.</p>

<h2 id="example">Example</h2>

<p>Let’s suppose there are two words. That is “Saturday” and “Sunday”. <br />
And start to compare two words. Start with to compare the first letter. <br /> 
Before we do, insert space to first of the words. Let’s start to compare with space. <br /></p>

<p><img src="https://user-images.githubusercontent.com/4101636/62920670-661d5380-bde1-11e9-9c10-4a54dc70b25c.png" alt="image" width="100%" />
The Image from <a href="https://en.wikipedia.org/wiki/Levenshtein_distance">wikipedia</a></p>

<p>So, Think of it as array.</p>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span><span class="sc">' '</span><span class="o">,</span> <span class="sc">'S'</span><span class="o">,</span> <span class="sc">'a'</span><span class="o">,</span> <span class="sc">'t'</span><span class="o">,</span> <span class="sc">'u'</span><span class="o">,</span> <span class="sc">'r'</span><span class="o">,</span> <span class="sc">'d'</span><span class="o">,</span> <span class="sc">'a'</span><span class="o">,</span> <span class="sc">'y'</span><span class="o">]</span>
<span class="o">[</span><span class="sc">' '</span><span class="o">,</span> <span class="sc">'S'</span><span class="o">,</span> <span class="sc">'u'</span><span class="o">,</span> <span class="sc">'n'</span><span class="o">,</span> <span class="sc">'d'</span><span class="o">,</span> <span class="sc">'a'</span><span class="o">,</span> <span class="sc">'y'</span><span class="o">]</span>
</code></pre></div></div>
<p>The rule is simple. If both are the same, the value is set diagonally from the current position.<br />
And if it’s different, add 1 to the smallest of the left, top, and diagonal values.</p>

<p>Finally, The value at the bottom right is the result.</p>

<p>This example result value is 3. It means, you have to modify 3 times to make the texts equals. 
So, the value is 0(zero), means the same text.</p>

<p>Let’s look at the library(<a href="https://github.com/LeeKyoungIl/illuminati/tree/master/illuminati/illuminati-util/illuminati-levenshtein">Github</a>) in the Java.<br /> 
You can easily add it to the Maven or Gradle dependency.<br /></p>

<p>That library is open source. And I made it. <br />
It is different from another library.<br />
That Added flag for case sensitive identify.<br />
And I tried to make it using only one the for loop syntax.<br /></p>

<p>It will help a bit to understand the code.</p>
:ET